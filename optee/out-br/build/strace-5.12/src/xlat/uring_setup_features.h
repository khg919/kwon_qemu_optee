/* Generated by ./src/xlat/gen.sh from ./src/xlat/uring_setup_features.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat uring_setup_features in mpers mode

# else

static const struct xlat_data uring_setup_features_xdata[] = {
 XLAT(IORING_FEAT_SINGLE_MMAP),
 #define XLAT_VAL_0 ((unsigned) (IORING_FEAT_SINGLE_MMAP))
 #define XLAT_STR_0 STRINGIFY(IORING_FEAT_SINGLE_MMAP)
 XLAT(IORING_FEAT_NODROP),
 #define XLAT_VAL_1 ((unsigned) (IORING_FEAT_NODROP))
 #define XLAT_STR_1 STRINGIFY(IORING_FEAT_NODROP)
 XLAT(IORING_FEAT_SUBMIT_STABLE),
 #define XLAT_VAL_2 ((unsigned) (IORING_FEAT_SUBMIT_STABLE))
 #define XLAT_STR_2 STRINGIFY(IORING_FEAT_SUBMIT_STABLE)
 XLAT(IORING_FEAT_RW_CUR_POS),
 #define XLAT_VAL_3 ((unsigned) (IORING_FEAT_RW_CUR_POS))
 #define XLAT_STR_3 STRINGIFY(IORING_FEAT_RW_CUR_POS)
 XLAT(IORING_FEAT_CUR_PERSONALITY),
 #define XLAT_VAL_4 ((unsigned) (IORING_FEAT_CUR_PERSONALITY))
 #define XLAT_STR_4 STRINGIFY(IORING_FEAT_CUR_PERSONALITY)
 XLAT(IORING_FEAT_FAST_POLL),
 #define XLAT_VAL_5 ((unsigned) (IORING_FEAT_FAST_POLL))
 #define XLAT_STR_5 STRINGIFY(IORING_FEAT_FAST_POLL)
 XLAT(IORING_FEAT_POLL_32BITS),
 #define XLAT_VAL_6 ((unsigned) (IORING_FEAT_POLL_32BITS))
 #define XLAT_STR_6 STRINGIFY(IORING_FEAT_POLL_32BITS)
 XLAT(IORING_FEAT_SQPOLL_NONFIXED),
 #define XLAT_VAL_7 ((unsigned) (IORING_FEAT_SQPOLL_NONFIXED))
 #define XLAT_STR_7 STRINGIFY(IORING_FEAT_SQPOLL_NONFIXED)
 XLAT(IORING_FEAT_EXT_ARG),
 #define XLAT_VAL_8 ((unsigned) (IORING_FEAT_EXT_ARG))
 #define XLAT_STR_8 STRINGIFY(IORING_FEAT_EXT_ARG)
 XLAT(IORING_FEAT_NATIVE_WORKERS),
 #define XLAT_VAL_9 ((unsigned) (IORING_FEAT_NATIVE_WORKERS))
 #define XLAT_STR_9 STRINGIFY(IORING_FEAT_NATIVE_WORKERS)
};
static
const struct xlat uring_setup_features[1] = { {
 .data = uring_setup_features_xdata,
 .size = ARRAY_SIZE(uring_setup_features_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
