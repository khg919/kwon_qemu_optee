/* Generated by ./src/xlat/gen.sh from ./src/xlat/v4l2_control_types.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_control_types[];

# else

static const struct xlat_data v4l2_control_types_xdata[] = {
 XLAT(V4L2_CTRL_TYPE_INTEGER),
 #define XLAT_VAL_0 ((unsigned) (V4L2_CTRL_TYPE_INTEGER))
 #define XLAT_STR_0 STRINGIFY(V4L2_CTRL_TYPE_INTEGER)
 XLAT(V4L2_CTRL_TYPE_BOOLEAN),
 #define XLAT_VAL_1 ((unsigned) (V4L2_CTRL_TYPE_BOOLEAN))
 #define XLAT_STR_1 STRINGIFY(V4L2_CTRL_TYPE_BOOLEAN)
 XLAT(V4L2_CTRL_TYPE_MENU),
 #define XLAT_VAL_2 ((unsigned) (V4L2_CTRL_TYPE_MENU))
 #define XLAT_STR_2 STRINGIFY(V4L2_CTRL_TYPE_MENU)
 XLAT(V4L2_CTRL_TYPE_BUTTON),
 #define XLAT_VAL_3 ((unsigned) (V4L2_CTRL_TYPE_BUTTON))
 #define XLAT_STR_3 STRINGIFY(V4L2_CTRL_TYPE_BUTTON)
 XLAT(V4L2_CTRL_TYPE_INTEGER64),
 #define XLAT_VAL_4 ((unsigned) (V4L2_CTRL_TYPE_INTEGER64))
 #define XLAT_STR_4 STRINGIFY(V4L2_CTRL_TYPE_INTEGER64)
 XLAT(V4L2_CTRL_TYPE_CTRL_CLASS),
 #define XLAT_VAL_5 ((unsigned) (V4L2_CTRL_TYPE_CTRL_CLASS))
 #define XLAT_STR_5 STRINGIFY(V4L2_CTRL_TYPE_CTRL_CLASS)
 XLAT(V4L2_CTRL_TYPE_STRING),
 #define XLAT_VAL_6 ((unsigned) (V4L2_CTRL_TYPE_STRING))
 #define XLAT_STR_6 STRINGIFY(V4L2_CTRL_TYPE_STRING)
 XLAT(V4L2_CTRL_TYPE_BITMASK),
 #define XLAT_VAL_7 ((unsigned) (V4L2_CTRL_TYPE_BITMASK))
 #define XLAT_STR_7 STRINGIFY(V4L2_CTRL_TYPE_BITMASK)
 XLAT(V4L2_CTRL_TYPE_INTEGER_MENU),
 #define XLAT_VAL_8 ((unsigned) (V4L2_CTRL_TYPE_INTEGER_MENU))
 #define XLAT_STR_8 STRINGIFY(V4L2_CTRL_TYPE_INTEGER_MENU)
 XLAT(V4L2_CTRL_TYPE_U8),
 #define XLAT_VAL_9 ((unsigned) (V4L2_CTRL_TYPE_U8))
 #define XLAT_STR_9 STRINGIFY(V4L2_CTRL_TYPE_U8)
 XLAT(V4L2_CTRL_TYPE_U16),
 #define XLAT_VAL_10 ((unsigned) (V4L2_CTRL_TYPE_U16))
 #define XLAT_STR_10 STRINGIFY(V4L2_CTRL_TYPE_U16)
 XLAT(V4L2_CTRL_TYPE_U32),
 #define XLAT_VAL_11 ((unsigned) (V4L2_CTRL_TYPE_U32))
 #define XLAT_STR_11 STRINGIFY(V4L2_CTRL_TYPE_U32)
 XLAT(V4L2_CTRL_TYPE_AREA),
 #define XLAT_VAL_12 ((unsigned) (V4L2_CTRL_TYPE_AREA))
 #define XLAT_STR_12 STRINGIFY(V4L2_CTRL_TYPE_AREA)
 XLAT(V4L2_CTRL_TYPE_H264_SPS),
 #define XLAT_VAL_13 ((unsigned) (V4L2_CTRL_TYPE_H264_SPS))
 #define XLAT_STR_13 STRINGIFY(V4L2_CTRL_TYPE_H264_SPS)
 XLAT(V4L2_CTRL_TYPE_H264_PPS),
 #define XLAT_VAL_14 ((unsigned) (V4L2_CTRL_TYPE_H264_PPS))
 #define XLAT_STR_14 STRINGIFY(V4L2_CTRL_TYPE_H264_PPS)
 XLAT(V4L2_CTRL_TYPE_H264_SCALING_MATRIX),
 #define XLAT_VAL_15 ((unsigned) (V4L2_CTRL_TYPE_H264_SCALING_MATRIX))
 #define XLAT_STR_15 STRINGIFY(V4L2_CTRL_TYPE_H264_SCALING_MATRIX)
 XLAT(V4L2_CTRL_TYPE_H264_SLICE_PARAMS),
 #define XLAT_VAL_16 ((unsigned) (V4L2_CTRL_TYPE_H264_SLICE_PARAMS))
 #define XLAT_STR_16 STRINGIFY(V4L2_CTRL_TYPE_H264_SLICE_PARAMS)
 XLAT(V4L2_CTRL_TYPE_H264_DECODE_PARAMS),
 #define XLAT_VAL_17 ((unsigned) (V4L2_CTRL_TYPE_H264_DECODE_PARAMS))
 #define XLAT_STR_17 STRINGIFY(V4L2_CTRL_TYPE_H264_DECODE_PARAMS)
 XLAT(V4L2_CTRL_TYPE_H264_PRED_WEIGHTS),
 #define XLAT_VAL_18 ((unsigned) (V4L2_CTRL_TYPE_H264_PRED_WEIGHTS))
 #define XLAT_STR_18 STRINGIFY(V4L2_CTRL_TYPE_H264_PRED_WEIGHTS)
 XLAT(V4L2_CTRL_TYPE_FWHT_PARAMS),
 #define XLAT_VAL_19 ((unsigned) (V4L2_CTRL_TYPE_FWHT_PARAMS))
 #define XLAT_STR_19 STRINGIFY(V4L2_CTRL_TYPE_FWHT_PARAMS)
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_control_types[1] = { {
 .data = v4l2_control_types_xdata,
 .size = ARRAY_SIZE(v4l2_control_types_xdata),
 .type = XT_SORTED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
